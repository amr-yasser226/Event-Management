@page
@model Frontend.Pages.RoleSelectionModel

@{
    ViewData["Title"] = "Role Selection";
    Layout = "_Layout";
}

<div class="container">
    <h2>Role Selection</h2>

    @if (!ModelState.IsValid)
    {
        <div class="alert alert-danger">
            @foreach (var error in ModelState.Values.SelectMany(v => v.Errors))
            {
                <p>@error.ErrorMessage</p>
            }
        </div>
    }
    else
    {
        <p>You have selected: <strong>@Model.Role</strong></p>

        <div class="mt-4">
            @if (Model.Role != null && Model.Role.Equals("Attendee", StringComparison.OrdinalIgnoreCase))
            {
                <a href="/User/Attendee/Login/AttendeeLogin" class="btn btn-primary">Login as Attendee</a>
                <a href="/User/Attendee/SignIn/AttendeeSignIn" class="btn btn-secondary">Sign In as Attendee</a>
            }
            else if (Model.Role != null && Model.Role.Equals("Volunteer", StringComparison.OrdinalIgnoreCase))
            {
                <a href="/User/Volunteer/Login/VolunteerLogin" class="btn btn-primary">Login as Volunteer</a>
                <a href="/User/Volunteer/SignIn/VolunteerSignIn" class="btn btn-secondary">Sign In as Volunteer</a>
            }
            else if (Model.Role != null && Model.Role.Equals("Organizer", StringComparison.OrdinalIgnoreCase))
            {
                <a href="/User/Organizer/Login/OrganizerLogin" class="btn btn-primary">Login as Organizer</a>
                <a href="/User/Organizer/SignIn/OrganizerSignIn" class="btn btn-secondary">Sign In as Organizer</a>
            }
            else
            {
                <p class="text-danger">Invalid role selected.</p>
            }
        </div>
    }
</div>
